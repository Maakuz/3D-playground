#pragma once
#include <d3d11.h>
#include "SimpleMath.h"



struct  Cube
{
	int vertexCount = 36;
	ID3D11Buffer * vertexBuffer;
	Cube(ID3D11Device * device)
	{
		Vertex vertices[] =
		{
			// FRONT
			{ { -0.5, -0.5,  0.5 },{ 0,  0, -1 * -1 },{ 0, 0 }, },
			{ { -0.5,  0.5,  0.5 },{ 0,  0, -1 * -1 },{ 0, 1 }, },
			{ {  0.5, -0.5,  0.5 },{ 0,  0, -1 * -1 },{ 1, 0 }, },
			{ {  0.5, -0.5,  0.5 },{ 0,  0, -1 * -1 },{ 1, 0 }, },
			{ { -0.5,  0.5,  0.5 },{ 0,  0, -1 * -1 },{ 0, 1 }, },
			{ {  0.5,  0.5,  0.5 },{ 0,  0, -1 * -1 },{ 1, 1 }, },
			// TOP				 									01	  0
			{ { -0.5,  0.5,  0.5 },{ 0,  1,  0 * -1 },{ 0, 0 }, },
			{ { -0.5,  0.5, -0.5 },{ 0,  1,  0 * -1 },{ 0, 1 }, },
			{ {  0.5,  0.5,  0.5 },{ 0,  1,  0 * -1 },{ 1, 0 }, },
			{ {  0.5,  0.5,  0.5 },{ 0,  1,  0 * -1 },{ 1, 0 }, },
			{ { -0.5,  0.5, -0.5 },{ 0,  1,  0 * -1 },{ 0, 1 }, },
			{ {  0.5,  0.5, -0.5 },{ 0,  1,  0 * -1 },{ 1, 1 }, },
			// LEFT				 									01	  0
			{ { -0.5, -0.5, -0.5 },{ -1,  0,  0 * -1 },{ 0, 1 } },
			{ { -0.5,  0.5, -0.5 },{ -1,  0,  0 * -1 },{ 1, 1 } },
			{ { -0.5, -0.5,  0.5 },{ -1,  0,  0 * -1 },{ 0, 0 } },
			{ { -0.5, -0.5,  0.5 },{ -1,  0,  0 * -1 },{ 0, 0 } },
			{ { -0.5,  0.5, -0.5 },{ -1,  0,  0 * -1 },{ 1, 1 } },
			{ { -0.5,  0.5,  0.5 },{ -1,  0,  0 * -1 },{ 1, 0 } },
			// RIGHT			 									01	  0
			{ {  0.5,  0.5, -0.5 },{ 1,  0,  0 * -1 },{ 1, 1 }, },
			{ {  0.5, -0.5, -0.5 },{ 1,  0,  0 * -1 },{ 0, 1 }, },
			{ {  0.5, -0.5,  0.5 },{ 1,  0,  0 * -1 },{ 0, 0 }, },
			{ {  0.5,  0.5, -0.5 },{ 1,  0,  0 * -1 },{ 1, 1 }, },
			{ {  0.5, -0.5,  0.5 },{ 1,  0,  0 * -1 },{ 0, 0 }, },
			{ {  0.5,  0.5,  0.5 },{ 1,  0,  0 * -1 },{ 1, 0 }, },
			// BACK				 									01	  0
			{ { -0.5,  0.5, -0.5 },{ 0,  0,  1 * -1 },{ 0, 1 }, },
			{ { -0.5, -0.5, -0.5 },{ 0,  0,  1 * -1 },{ 0, 0 }, },
			{ {  0.5, -0.5, -0.5 },{ 0,  0,  1 * -1 },{ 1, 0 }, },
			{ { -0.5,  0.5, -0.5 },{ 0,  0,  1 * -1 },{ 0, 1 }, },
			{ {  0.5, -0.5, -0.5 },{ 0,  0,  1 * -1 },{ 1, 0 }, },
			{ {  0.5,  0.5, -0.5 },{ 0,  0,  1 * -1 },{ 1, 1 }, },
			// BOTTOM														01	  0
			{ { -0.5, -0.5, -0.5 },{ 0, -1,  0 * -1 },{ 0, 1 }, },
			{ { -0.5, -0.5,  0.5 },{ 0, -1,  0 * -1 },{ 0, 0 }, },
			{ {  0.5, -0.5,  0.5 },{ 0, -1,  0 * -1 },{ 1, 0 }, },
			{ { -0.5, -0.5, -0.5 },{ 0, -1,  0 * -1 },{ 0, 1 }, },
			{ {  0.5, -0.5,  0.5 },{ 0, -1,  0 * -1 },{ 1, 0 }, },
			{ {  0.5, -0.5, -0.5 },{ 0, -1,  0 * -1 },{ 1, 1 } }
		};

		D3D11_SUBRESOURCE_DATA subData = {};
		subData.pSysMem = vertices;

		D3D11_BUFFER_DESC desc = { 0 };
		desc.ByteWidth = sizeof(vertices);
		desc.Usage = D3D11_USAGE_IMMUTABLE;
		desc.BindFlags = D3D11_BIND_VERTEX_BUFFER;

		device->CreateBuffer(&desc, &subData, &vertexBuffer);
	}

	~Cube()
	{
		vertexBuffer->Release();
	}
};